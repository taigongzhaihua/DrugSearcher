<Window x:Class="DrugSearcher.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:DrugSearcher.ViewModels" 
        xmlns:local="clr-namespace:DrugSearcher.Converters"
        mc:Ignorable="d"
        Title="{Binding Title}"
        Height="780"
        Width="1100"
        Style="{StaticResource BaseWindowStyle}"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}">

    <Window.Resources>
        <!-- ContextMenu 样式 -->
        <Style x:Key="FunctionContextMenuStyle" TargetType="ContextMenu">
            <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Effect" Value="{StaticResource PopupShadowEffect}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8" Margin="16"
                                Padding="{TemplateBinding Padding}"
                                Effect="{TemplateBinding Effect}">
                            <StackPanel IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- MenuItem 样式 -->
        <Style x:Key="FunctionMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="MinWidth" Value="180"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- 图标 -->
                                <TextBlock Grid.Column="0"
                                           Text="{TemplateBinding Tag}"
                                           FontFamily="{DynamicResource IconFont}"
                                           FontSize="18"
                                           Margin="0,0,12,0"
                                           VerticalAlignment="Center"
                                           Foreground="{DynamicResource PrimaryBrush}"/>

                                <!-- 文本 -->
                                <TextBlock Grid.Column="1"
                                           Text="{TemplateBinding Header}"
                                           VerticalAlignment="Center"/>

                                <!-- 子菜单箭头 -->
                                <TextBlock Grid.Column="2"
                                           Text="&#xe618;"
                                           FontFamily="{DynamicResource IconFont}"
                                           FontSize="12"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static local:Converters.BooleanToVisibilityConverter}}"/>

                                <!-- 子菜单弹出框 -->
                                <Popup Grid.Column="0" x:Name="PART_Popup"
                                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right"
                                       AllowsTransparency="True"
                                       PopupAnimation="Slide">
                                    <Border Background="{DynamicResource SurfaceBrush}"
                                            BorderBrush="{DynamicResource BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Padding="8"
                                            Effect="{StaticResource PopupShadowEffect}">
                                        <StackPanel IsItemsHost="True"/>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ThemeColorMenuItemStyle"  TargetType="MenuItem" BasedOn="{StaticResource FunctionMenuItemStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- 图标 -->
                                <TextBlock Grid.Column="0"
                                           Text="{TemplateBinding Tag}"
                                           FontFamily="{DynamicResource IconFont}"
                                           FontSize="20"
                                           Margin="0,0,12,0"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"/>

                                <!-- 文本 -->
                                <TextBlock Grid.Column="1"
                                           Text="{TemplateBinding Header}"
                                           VerticalAlignment="Center"
                                           FontWeight="Bold"/>

                                <!-- 子菜单箭头 -->
                                <TextBlock Grid.Column="2"
                                           Text="&#xe618;"
                                           FontFamily="{DynamicResource IconFont}"
                                           FontSize="12"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static local:Converters.BooleanToVisibilityConverter}}"/>

                                <!-- 子菜单弹出框 -->
                                <Popup Grid.Column="0" x:Name="PART_Popup"
                                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right"
                                       AllowsTransparency="True"
                                       PopupAnimation="Slide">
                                    <Border Background="{DynamicResource SurfaceBrush}"
                                            BorderBrush="{DynamicResource BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Padding="8"
                                            Effect="{StaticResource PopupShadowEffect}">
                                        <StackPanel IsItemsHost="True"/>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Tag" Value="&#xe625;"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Tag" Value="&#xe624;"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 分隔线样式 -->
        <Style x:Key="MenuSeparatorStyle" TargetType="Separator">
            <Setter Property="Background" Value="{DynamicResource DividerBrush}"/>
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border Background="{TemplateBinding Background}" 
                                Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CaptionButtonStyle" TargetType="Button" BasedOn="{StaticResource TransparentThemeButtonStyle}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="28"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>

    </Window.Resources>

    <Grid>
        <!-- 窗口顶部工具栏 -->
        <StackPanel HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Orientation="Horizontal"
                    Panel.ZIndex="10">

            <!-- 功能按钮组 -->
            <StackPanel Orientation="Horizontal" Margin="0,10,10,0">

                <!-- 主页按钮 -->
                <Button x:Name="HomeButton"
                        Content="{Binding HomeButtonText}"
                        Style="{DynamicResource CaptionButtonStyle}"
                        Click="HomeButton_OnClick"
                        Margin="0,0,5,0"
                        ToolTip="主页"
                        WindowChrome.IsHitTestVisibleInChrome="True" />

                <!-- 导航按钮组 -->
                <StackPanel Orientation="Horizontal">
                    <!-- 后退按钮 -->
                    <Button x:Name="BackButton"
                            Content="&#xe617;"
                            Style="{DynamicResource CaptionButtonStyle}"
                            Click="BackButton_OnClick"
                            Margin="0,0,5,0"
                            ToolTip="后退"
                            IsEnabled="{Binding CanGoBack, ElementName=MainFrame}"
                            WindowChrome.IsHitTestVisibleInChrome="True" />

                    <!-- 前进按钮 -->
                    <Button x:Name="ForwardButton"
                            Content="&#xe618;"
                            Style="{DynamicResource CaptionButtonStyle}"
                            Click="ForwardButton_OnClick"
                            Margin="0,0,5,0"
                            ToolTip="前进"
                            IsEnabled="{Binding CanGoForward, ElementName=MainFrame}"
                            WindowChrome.IsHitTestVisibleInChrome="True" />
                </StackPanel>

                <!-- 功能菜单按钮 -->
                <Button x:Name="MenuButton"
                        Content="&#xe626;"
                        Style="{DynamicResource CaptionButtonStyle}"
                        Click="MenuButton_OnClick"
                        Margin="0,0,10,0"
                        ToolTip="功能菜单"
                        WindowChrome.IsHitTestVisibleInChrome="True">

                    <!-- 功能菜单 -->
                    <Button.ContextMenu>
                        <ContextMenu x:Name="FunctionContextMenu" 
                                     Style="{StaticResource FunctionContextMenuStyle}">

                            <!-- 菜单标题 -->
                            <MenuItem Header="功能菜单" 
                                      IsEnabled="False"
                                      FontWeight="Bold"
                                      Foreground="{DynamicResource Heading4Brush}"/>

                            <Separator Style="{StaticResource MenuSeparatorStyle}"/>

                            <!-- 数据管理 -->
                            <MenuItem x:Name="LoacalDataMenuItem"
                                      Header="本地数据管理"
                                      Tag="&#xe623;"
                                      Style="{StaticResource FunctionMenuItemStyle}"
                                      Click="DataManagementMenuItem_Click"
                                      ToolTip="本地数据管理"/>

                            <MenuItem x:Name="CrawlMenuItem"
                                      Header="爬虫页面"
                                      Tag="&#xe628;"
                                      Style="{StaticResource FunctionMenuItemStyle}"
                                      Click="MenuItem_OnClick"/>

                            <!-- 设置 -->
                            <MenuItem x:Name="SettingsMenuItem"
                                      Header="设置"
                                      Tag="{Binding SettingsButtonText}"
                                      Style="{StaticResource FunctionMenuItemStyle}"
                                      Click="SettingsMenuItem_Click"
                                      ToolTip="应用设置"/>

                            <!-- 主题设置 -->
                            <MenuItem Header="主题设置"
                                      Tag="&#xe614;"
                                      Style="{StaticResource FunctionMenuItemStyle}"
                                      ToolTip="主题和外观设置">

                                <!-- 主题子菜单 -->
                                <MenuItem.Items>
                                    <!-- 明暗模式切换 -->

                                    <MenuItem Header="切换明暗模式"
                                              Tag="{Binding ThemeButtonText}"
                                              Style="{StaticResource FunctionMenuItemStyle}"
                                              Command="{Binding SwitchThemeCommand}"
                                              ToolTip="{Binding ThemeTooltip}"/>


                                    <Separator Style="{StaticResource MenuSeparatorStyle}"/>

                                    <!-- 颜色主题选择 -->
                                    <MenuItem Header="蓝色主题"
                                              Style="{StaticResource ThemeColorMenuItemStyle}"
                                              Command="{Binding SwitchThemeColorCommand}"
                                              CommandParameter="Blue"
                                              IsCheckable="True"
                                              IsChecked="{Binding ColorSelectionStates[Blue]}"
                                              Foreground="#2196F3"/>

                                    <MenuItem Header="粉色主题"
                                              Style="{StaticResource ThemeColorMenuItemStyle}"
                                              Command="{Binding SwitchThemeColorCommand}"
                                              CommandParameter="Pink"
                                              IsCheckable="True"
                                              IsChecked="{Binding ColorSelectionStates[Pink]}"
                                              Foreground="#E91E63"/>

                                    <MenuItem Header="青色主题"
                                              Style="{StaticResource ThemeColorMenuItemStyle}"
                                              Command="{Binding SwitchThemeColorCommand}"
                                              CommandParameter="Cyan"
                                              IsCheckable="True"
                                              IsChecked="{Binding ColorSelectionStates[Cyan]}"
                                              Foreground="#00BCD4"/>

                                    <MenuItem Header="绿色主题"
                                              Style="{StaticResource ThemeColorMenuItemStyle}"
                                              Command="{Binding SwitchThemeColorCommand}"
                                              CommandParameter="Green"
                                              IsCheckable="True"
                                              IsChecked="{Binding ColorSelectionStates[Green]}"
                                              Foreground="#4CAF50"/>

                                    <MenuItem Header="紫色主题"
                                              Style="{StaticResource ThemeColorMenuItemStyle}"
                                              Command="{Binding SwitchThemeColorCommand}"
                                              CommandParameter="Purple"
                                              IsCheckable="True"
                                              IsChecked="{Binding ColorSelectionStates[Purple]}"
                                              Foreground="#9C27B0"/>

                                    <MenuItem Header="橙色主题"
                                              Style="{StaticResource ThemeColorMenuItemStyle}"
                                              Command="{Binding SwitchThemeColorCommand}"
                                              CommandParameter="Orange"
                                              IsCheckable="True"
                                              IsChecked="{Binding ColorSelectionStates[Orange]}"
                                              Foreground="#FF9800"/>

                                    <MenuItem Header="红色主题"
                                              Style="{StaticResource ThemeColorMenuItemStyle}"
                                              Command="{Binding SwitchThemeColorCommand}"
                                              CommandParameter="Red"
                                              IsCheckable="True"
                                              IsChecked="{Binding ColorSelectionStates[Red]}"
                                              Foreground="#F44336" />

                                    <MenuItem Header="靛蓝色主题"
                                              Style="{StaticResource ThemeColorMenuItemStyle}"
                                              Command="{Binding SwitchThemeColorCommand}"
                                              CommandParameter="Indigo"
                                              IsCheckable="True"
                                              IsChecked="{Binding ColorSelectionStates[Indigo]}"
                                              Foreground="#3F51B5" />
                                </MenuItem.Items>
                            </MenuItem>

                            <Separator Style="{StaticResource MenuSeparatorStyle}"/>

                            <!-- 关于 -->
                            <MenuItem x:Name="AboutMenuItem"
                                      Header="关于"
                                      Tag="&#xe621;"
                                      Style="{StaticResource FunctionMenuItemStyle}"
                                      Click="AboutMenuItem_Click"
                                      ToolTip="关于应用程序"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
            </StackPanel>

            <!-- 窗口控制按钮组 -->
            <StackPanel Orientation="Horizontal" Margin="0,10,15,0">
                <!-- 最小化按钮 -->
                <Button x:Name="MinimizeButton"
                        Content="&#xe60e;"
                        Style="{DynamicResource CaptionButtonStyle}"
                        Click="MinimizeButton_Click"
                        Margin="0,0,5,0"
                        ToolTip="最小化窗口"
                        WindowChrome.IsHitTestVisibleInChrome="True" />

                <!-- 最大化/还原按钮 -->
                <Button x:Name="MaximizeButton"
                        Content="&#xe60d;"
                        Style="{DynamicResource CaptionButtonStyle}"
                        Click="MaximizeButton_OnClick"
                        Margin="0,0,5,0"
                        ToolTip="最大化窗口"
                        WindowChrome.IsHitTestVisibleInChrome="True" />

                <!-- 关闭按钮 -->
                <Button x:Name="CloseButton"
                        Content="&#xe60f;"
                        Style="{DynamicResource CaptionButtonStyle}"
                        Click="CloseButton_Click"
                        Margin="0,0,0,0"
                        ToolTip="关闭窗口"
                        WindowChrome.IsHitTestVisibleInChrome="True" />
            </StackPanel>
        </StackPanel>

        <!-- 主要内容区域 -->
        <Grid Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="40"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- 应用图标和标题栏 -->
            <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                        Orientation="Horizontal"
                        Margin="15,10,0,10">

                <!-- 应用图标 -->
                <Border Background="{DynamicResource PrimaryBrush}"
                        VerticalAlignment="Center"
                        Margin="0,0,10,0" 
                        Padding="4"
                        CornerRadius="4"
                        Width="24" Height="24"
                        Effect="{StaticResource CardShadowEffect}">
                    <TextBlock x:Name="ApplicationIcon"
                               Text="&#xe629;"
                               FontFamily="{DynamicResource IconFont}"
                               VerticalAlignment="Center" HorizontalAlignment="Center"
                               FontSize="14"
                               Foreground="{DynamicResource PrimaryControlForegroundBrush}"/>
                </Border>

                <!-- 应用标题 -->
                <TextBlock Text="{Binding Title}"
                           FontSize="16"
                           FontWeight="Medium"
                           Foreground="{DynamicResource Heading3Brush}"
                           VerticalAlignment="Center" />
            </StackPanel>

            <!-- 页面导航框架 -->
            <Frame x:Name="MainFrame"
                   Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                   Margin="5"
                   NavigationUIVisibility="Hidden"
                   Background="Transparent" />
        </Grid>
    </Grid>
</Window>